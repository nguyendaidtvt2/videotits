{"version":3,"sources":["utils/queries.js","utils/mutations.js","components/VideoList/index.js","pages/Home.js","utils/auth.js","pages/VideoCrud.js","pages/Video.js","pages/Signup.js","pages/Login.js","components/Header/index.js","components/Footer/index.js","components/Upload/index.js","pages/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_VIDEOS","gql","QUERY_SINGLE_VIDEO","QUERY_MY_VIDEOS","ADD_USER","ADD_VIDEO","LOGIN_USER","VIDEO_METRICS","UPDATE_LIKES","UPDATE_DISLIKES","REMOVE_VIDEO","VideoList","videos","useMutation","error","length","className","map","video","to","_id","videoSrc","cloudURL","volume","muted","disablePictureInPicture","Home","useQuery","loading","data","Container","fluid","title","this","getToken","decode","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","VideoCrud","videoId","useParams","variables","deleteVideo","a","Auth","loggedIn","console","log","Card","Header","as","Body","Title","publishDate","style","width","height","controls","src","type","onClick","deleteFunction","SingleVideo","level","userId","getProfile","videoMetrics","updateLikes","err","updateDislikes","erro","disable","likedBy","includes","dislikedBy","viewsTag","views","isLiked","user","isDisliked","newView","updateMetrics","likes","dislikes","disabled","Signup","useState","name","email","password","formState","setFormState","addUser","handleChange","event","target","value","handleFormSubmit","preventDefault","login","Row","Form","onSubmit","Group","controlId","Label","column","sm","Col","Control","placeholder","onChange","message","Login","props","Navbar","bg","expand","fixed","Brand","href","alt","Toggle","Collapse","id","Nav","maxHeight","navbarScroll","logout","Button","variant","Footer","useLocation","useHistory","getFullYear","CloudinaryUploadWidget","setTitle","URL","setURL","addVideo","myWidget","cloudinary","createUploadWidget","cloudName","uploadPreset","result","info","secure_url","videoAuthor","open","Profile","myVideos","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","Video","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EAAeC,YAAH,iMAeZC,EAAqBD,YAAH,kPAgBlBE,EAAkBF,YAAH,iO,GAcDA,YAAH,0HAWSA,YAAH,oIAUFA,YAAH,qGASSA,YAAH,0HASPA,YAAH,oG,gDCpFRG,EAAWH,YAAH,4NAQRI,EAAYJ,YAAH,wRAYTK,EAAaL,YAAH,gOAaVM,EAAgBN,YAAH,qKAQbO,EAAeP,YAAH,kQAgBZQ,EAAkBR,YAAH,kSAgBfS,EAAeT,YAAH,4NAcVI,I,OCnCAM,EA/CG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,EAAkCC,YAAYN,GAA9C,6BAAuBO,MAEvB,IAAKF,EAAOG,OACV,OAAO,oBAAIC,UAAU,eAAd,4BAmBT,OACE,qBAAKA,UAAU,MAAf,SACGJ,GACCA,EAAOK,KAAI,SAACC,GAAD,OACT,qBAAKF,UAAU,oBAAf,SAKI,cAAC,IAAD,CAAMG,GAAE,kBAAaD,EAAME,KAA3B,SACA,cAAC,IAAD,CAAkBC,SAAUH,EAAMI,SAAUC,OAAQ,GAAKC,OAAO,EAAQC,yBAAyB,OAN7DP,EAAME,WCRzCM,EAlBF,WAEX,MAA0BC,YAAS3B,GAA3B4B,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KACXjB,GAAa,OAAJiB,QAAI,IAAJA,OAAA,EAAAA,EAAMjB,SAAU,GAE/B,OACE,cAACkB,EAAA,EAAD,CAAWC,OAAK,EAACf,UAAU,eAA3B,SAEOY,EACC,6CAEA,cAAC,EAAD,CAAWhB,OAAQA,EAAQoB,MAAM,mB,2BCoB9B,O,4FApCb,WACE,QAAKC,KAAKC,YAGHC,aAAOF,KAAKC,c,sBAGrB,WACE,IAAME,EAAQH,KAAKC,WACnB,SAAOE,GAAUH,KAAKI,eAAeD,M,4BAGvC,SAAeA,GAEb,OADgBD,aAAOC,GACXE,IAAMC,KAAKC,MAAQ,MAC7BC,aAAaC,WAAW,aACjB,K,sBAKX,WACE,OAAOD,aAAaE,QAAQ,c,mBAG9B,SAAMC,GACJH,aAAaI,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,O,oBAGzB,WACEP,aAAaC,WAAW,YACxBI,OAAOC,SAASC,OAAO,S,eCoCZC,GA9DG,WAChB,IAAQC,EAAYC,cAAZD,QAER,EAA0BvB,YAASzB,EAAoB,CACrDkD,UAAW,CAAEF,QAASA,KADhBtB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAIjB,EAAiChB,YAAYH,GAA7C,mBAAO2C,EAAP,KACMnC,GADN,KAAsBJ,OACJ,OAAJe,QAAI,IAAJA,OAAA,EAAAA,EAAMX,QAAS,IAC7B,GAAIU,EACF,OAAO,6CAVa,4CAatB,WAA8BsB,GAA9B,iBAAAI,EAAA,yDACQlB,EAAQmB,GAAKC,WAAaD,GAAKrB,WAAa,KADpD,0CAGW,GAHX,gCAM2BmB,EAAY,CACjCD,UAAW,CAAEF,aAPnB,kBAMYrB,KANZ,kDAUI4B,QAAQC,IAAR,MAVJ,WAYOtB,EAZP,2CAaW,GAbX,0DAbsB,wBAmCtB,OACE,cAACN,EAAA,EAAD,UACE,eAAC6B,GAAA,EAAD,CAAM3C,UAAU,mBAAhB,UACE,cAAC2C,GAAA,EAAKC,OAAN,CAAaC,GAAG,KAAK7C,UAAU,cAA/B,SACGE,EAAMc,QAET,eAAC2B,GAAA,EAAKG,KAAN,CAAW9C,UAAU,aAArB,UACE,eAAC2C,GAAA,EAAKI,MAAN,CAAY/C,UAAU,cAAtB,cAAqC,mBAAGA,UAAU,wBAAlD,IAA8EE,EAAM8C,eACpF,uBAAOC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAAUC,UAAQ,EAAtD,SACE,wBAAQC,IAAKnD,EAAMI,SAAUgD,KAAK,gBAEpC,oBAAItD,UAAU,cAAd,sFACA,8BACE,wBACEA,UAAU,eACVsD,KAAK,SACLC,QArBQ,YA9BE,oCA+BpBC,CAAetB,GACfJ,OAAOC,SAASC,OAAO,MAgBf,+BCgEGyB,GA/GK,WAClB,IAAQvB,EAAYC,cAAZD,QAEJwB,GAAS,EACTC,EAAS,GACTpB,GAAKqB,eACPF,EAAQnB,GAAKqB,aAAa/C,KAAK6C,MAC/BC,EAASpB,GAAKqB,aAAa/C,KAAKT,KAElC,MAAkCP,YAAYN,GAA9C,mBAAOsE,EAAP,KACA,GADA,KAAuB/D,MACQD,YAAYL,IAA3C,mBAAOsE,EAAP,KACA,GADA,KAAsBC,IACalE,YAAYJ,IAA/C,mBAAOuE,EAAP,KAEA,GAFA,KAAyBC,KAECtD,YAASzB,EAAoB,CACrDkD,UAAW,CAAEF,QAASA,MADhBtB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAIbqD,GAAU,EAEd,GAAItD,EACF,OAAO,6CAEP,IAAMV,GAAY,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMX,QAAS,IAEzBA,EAAMiE,QAAQC,SAAST,IAAWzD,EAAMmE,WAAWD,SAAST,MAC9DO,GAAU,GAGZ,IAAII,EAAW,GAEbA,EADEZ,EAAQ,EACF,iBAAaxD,EAAMqE,OACT,GAEpB,IAcMC,EAAO,uCAAG,sBAAAlC,EAAA,+EAENwB,EAAY,CAChB1B,UAAW,CACTF,QAASA,EACTuC,KAAMd,KALE,sDASZlB,QAAQ3C,MAAR,MATY,wDAAH,qDAkBP4E,EAAU,uCAAG,sBAAApC,EAAA,+EAET0B,EAAe,CACnB5B,UAAW,CACTF,QAASA,EACTuC,KAAMd,KALK,sDASflB,QAAQ3C,MAAR,MATe,wDAAH,qDAoBhB,OApDsB,WACpB,IAAM6E,EAAWzE,EAAMqE,MAAQ,EAC/B,IACEV,EAAa,CACXzB,UAAW,CACTF,QAASA,EACTqC,MAAOI,KAGX,MAAOZ,GACPtB,QAAQC,IAAIqB,IAwChBa,GAGE,8BACE,cAAC9D,EAAA,EAAD,UACE,eAAC6B,GAAA,EAAD,CAAM3C,UAAU,mBAAhB,UACE,cAAC2C,GAAA,EAAKC,OAAN,CAAaC,GAAG,KAAK7C,UAAU,cAA/B,SAA8CE,EAAMc,QACpD,eAAC2B,GAAA,EAAKG,KAAN,CAAW9C,UAAU,aAArB,UACE,cAAC2C,GAAA,EAAKI,MAAN,CAAY/C,UAAU,cAAtB,SAAqCE,EAAM8C,cAC3C,cAACL,GAAA,EAAKI,MAAN,CAAY/C,UAAU,cAAtB,SAAqCsE,IACrC,uBAAOrB,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAAUC,UAAQ,EAAtD,SACE,wBAAQC,IAAKnD,EAAMI,SAAUgD,KAAK,gBAEpC,oBAAGtD,UAAU,cAAb,oBAAmCE,EAAM2E,SAAU,oBAAG7E,UAAU,cAAb,wBAAuCE,EAAM4E,YAE/FpB,GAAS,EAAK,8BAAG,wBAAQ1D,UAAU,UAAU+E,SAAUb,EAASX,QAtCzD,WAChBiB,IACAN,GAAU,GAoCgB,SAAmE,mBAAGlE,UAAU,uBAEhG,wBAAQA,UAAU,UAAU+E,SAAUb,EAASX,QAtBtC,WACnBmB,IACAR,GAAU,GAoBA,SAAsE,mBAAGlE,UAAU,4BAA0C,c,oCCnB9HgF,GAjFA,WACb,MAAkCC,mBAAS,CACzCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAAmCzF,YAAYT,GAA/C,mBAAOmG,EAAP,YAAkBzF,EAAlB,EAAkBA,MAAOe,EAAzB,EAAyBA,KAEnB2E,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACdL,EAAa,2BACRD,GADO,mBAETH,EAAOS,MAINC,EAAgB,uCAAG,WAAOH,GAAP,iBAAAnD,EAAA,6DACvBmD,EAAMI,iBADiB,kBAGEN,EAAQ,CAC7BnD,UAAU,eAAMiD,KAJG,gBAGbxE,EAHa,EAGbA,KAGR0B,GAAKuD,MAAMjF,EAAK0E,QAAQnE,OANH,gDAQrBqB,QAAQ3C,MAAR,MARqB,yDAAH,sDAYtB,OACE,gCACE,oBAAIE,UAAU,eAAd,oBACA,cAACc,EAAA,EAAD,CAAWd,UAAU,YAArB,SACE,eAAC+F,GAAA,EAAD,CAAK/F,UAAU,0CAAf,UACGa,EACC,yDAC2B,IACzB,cAAC,IAAD,CAAMV,GAAG,IAAT,sCAGF,eAAC6F,GAAA,EAAD,CAAMC,SAAUL,EAAhB,UACE,eAACI,GAAA,EAAKE,MAAN,CAAYrD,GAAIkD,KAAK/F,UAAU,OAAOmG,UAAU,sBAAhD,UACE,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,kBACA,cAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,SACE,cAACN,GAAA,EAAKQ,QAAN,CAActB,KAAK,OAAO5B,KAAK,OAAOmD,YAAY,cAAcd,MAAON,EAAUH,KAC/EwB,SAAUlB,SAGhB,eAACQ,GAAA,EAAKE,MAAN,CAAYrD,GAAIkD,KAAK/F,UAAU,OAAOmG,UAAU,sBAAhD,UACE,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,mBACA,cAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,SACE,cAACN,GAAA,EAAKQ,QAAN,CAActB,KAAK,QAAQ5B,KAAK,QAAQmD,YAAY,cAAcd,MAAON,EAAUF,MACjFuB,SAAUlB,SAGhB,eAACQ,GAAA,EAAKE,MAAN,CAAYrD,GAAIkD,KAAK/F,UAAU,OAAOmG,UAAU,yBAAhD,UACE,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,sBACA,cAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,SACE,cAACN,GAAA,EAAKQ,QAAN,CAActB,KAAK,WAAW5B,KAAK,WAAWmD,YAAY,WAAWd,MAAON,EAAUD,SACpFsB,SAAUlB,SAGhB,cAACQ,GAAA,EAAKE,MAAN,CAAYrD,GAAIkD,KAAK/F,UAAU,OAA/B,SACE,cAACuG,GAAA,EAAD,UACE,wBAAQjD,KAAK,SAAStD,UAAU,UAAhC,4BAMPF,GACC,qBAAKE,UAAU,sBAAf,SACGF,EAAM6G,mBCENC,GAzED,SAACC,GACb,MAAkC5B,mBAAS,CAAEE,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCzF,YAAYP,GAA7C,mBAAOwG,EAAP,YAAgBhG,EAAhB,EAAgBA,MAAOe,EAAvB,EAAuBA,KAEjB2E,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACdL,EAAa,2BACRD,GADO,mBAETH,EAAOS,MAINC,EAAgB,uCAAG,WAAOH,GAAP,iBAAAnD,EAAA,6DACvBmD,EAAMI,iBADiB,kBAGEC,EAAM,CAC3B1D,UAAU,eAAMiD,KAJG,gBAGbxE,EAHa,EAGbA,KAGR0B,GAAKuD,MAAMjF,EAAKiF,MAAM1E,OAND,gDAQrBqB,QAAQ3C,MAAR,MARqB,QAWvBwF,EAAa,CACXH,MAAO,GACPC,SAAU,KAbW,yDAAH,sDAiBtB,OACE,gCACE,oBAAIpF,UAAU,eAAd,mBACA,cAACc,EAAA,EAAD,CAAWd,UAAU,YAArB,SACE,eAAC+F,GAAA,EAAD,CAAK/F,UAAU,0CAAf,UACGa,EACC,0DAC4B,IAC1B,cAAC,IAAD,CAAMV,GAAG,IAAT,sCAGF,eAAC6F,GAAA,EAAD,CAAMC,SAAUL,EAAhB,UACE,eAACI,GAAA,EAAKE,MAAN,CAAYrD,GAAIkD,KAAK/F,UAAU,OAAOmG,UAAU,sBAAhD,UACE,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,mBACA,cAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,SACE,cAACN,GAAA,EAAKQ,QAAN,CAActB,KAAK,QAAQ5B,KAAK,QAAQmD,YAAY,cAAcd,MAAON,EAAUF,MACjFuB,SAAUlB,SAGhB,eAACQ,GAAA,EAAKE,MAAN,CAAYrD,GAAIkD,KAAK/F,UAAU,OAAOmG,UAAU,yBAAhD,UACE,cAACH,GAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,sBACA,cAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,SACE,cAACN,GAAA,EAAKQ,QAAN,CAActB,KAAK,WAAW5B,KAAK,WAAWmD,YAAY,WAAWd,MAAON,EAAUD,SACpFsB,SAAUlB,SAGhB,cAACQ,GAAA,EAAKE,MAAN,CAAYrD,GAAIkD,KAAK/F,UAAU,OAA/B,SACE,cAACuG,GAAA,EAAD,UACE,wBAAQjD,KAAK,SAAStD,UAAU,UAAhC,4BAKPF,GACC,qBAAKE,UAAU,sBAAf,SACGF,EAAM6G,mB,2BCAN/D,GAhEA,WAEb,IAAIc,GAAS,EACbjB,QAAQC,IAAIH,GAAKqB,cACbrB,GAAKqB,eACPF,EAAQnB,GAAKqB,aAAa/C,KAAK6C,OAQjC,OACE,qBAAK1D,UAAU,cAAf,SACA,cAAC8G,GAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKC,MAAM,MAArC,SACA,eAACnG,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC+F,GAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,SAAuB,qBAAK9D,IAAI,+CAA+C+D,IAAI,OACnF,cAACN,GAAA,EAAOO,OAAR,CAAe,gBAAc,iBAC7B,eAACP,GAAA,EAAOQ,SAAR,CAAiBC,GAAG,eAApB,UACE,eAACC,GAAA,EAAD,CACExH,UAAU,uBACViD,MAAO,CAAEwE,UAAW,SACpBC,cAAY,EAHd,UAKE,cAAC,IAAD,CAAM1H,UAAU,oBAAoBG,GAAG,IAAvC,kBACCoC,GAAKC,WACJ,qCACa,IAAVkB,GAAyB,IAAVA,EAAe,cAAC,IAAD,CAAM1D,UAAU,oBAAoBG,GAAG,UAAvC,qBAAoE,GACxF,IAAVuD,GAAyB,IAAVA,EAAe,cAAC,IAAD,CAAM1D,UAAU,oBAAoBG,GAAG,MAAvC,6BAEnB,GACZ,cAAC,IAAD,CAAMH,UAAU,oBAAoBuD,QAxBjC,SAACkC,GACdA,EAAMI,iBACNtD,GAAKoF,UAsBK,uBAKF,qCACE,cAAC,IAAD,CAAM3H,UAAU,oBAAoBG,GAAG,SAAvC,mBAGA,cAAC,IAAD,CAAMH,UAAU,oBAAoBG,GAAG,UAAvC,0BAON,eAAC6F,GAAA,EAAD,CAAMhG,UAAU,SAAhB,UACE,cAACgG,GAAA,EAAKQ,QAAN,CACElD,KAAK,SACLmD,YAAY,SACZzG,UAAU,OACV,aAAW,WAEb,cAAC4H,GAAA,EAAD,CAAQC,QAAQ,kBAAhB,kCClDKC,GAZA,WACIC,cACDC,cAChB,OACE,wBAAQhI,UAAU,8BAAlB,SACE,qBAAKA,UAAU,6BAAf,SACE,qBAAIA,UAAU,cAAd,mBAAoC,IAAIuB,MAAO0G,cAA/C,0BCiFOC,OA/Ef,WACE,MAA0BjD,mBAAS,IAAnC,mBAAOjE,EAAP,KAAcmH,EAAd,KACA,EAAsBlD,mBAAS,IAA/B,mBAAOmD,EAAP,KAAYC,EAAZ,KACA,EAA4BpD,mBAAS,IAArC,mBACA,GADA,UAC8BpF,YAAYR,IAA1C,mBAAOiJ,EAAP,KAEMC,GAFN,KAAmBzI,MAEFgC,OAAO0G,WAAWC,mBACjC,CACEC,UAAW,YACXC,aAAc,cAEhB,SAAC7I,EAAO8I,IACD9I,GAAS8I,GAA2B,YAAjBA,EAAOnD,QAC7BhD,QAAQC,IAAI,iCAAkCkG,EAAOC,MAErDR,EAAOO,EAAOC,KAAKC,iBASnBlD,EAAgB,uCAAG,WAAOH,GAAP,SAAAnD,EAAA,sDACvBmD,EAAMI,iBACN,IACEyC,EAAS,CACPlG,UAAW,CACTpB,MAAOA,EACPV,SAAU8H,EACVW,YAAaxG,GAAKqB,aAAa/C,KAAKqE,QAGxCiD,EAAS,IACTrG,OAAOC,SAASC,OAAO,KACvB,MAAO+B,GACPtB,QAAQ3C,MAAMiE,GAbO,2CAAH,sDAiBtB,OACE,eAACjD,EAAA,EAAD,CAAWd,UAAU,6CAArB,UACE,cAAC+F,GAAA,EAAD,CAAK/F,UAAU,+CAAf,SACE,cAACgG,GAAA,EAAKI,MAAN,kCAEF,cAACL,GAAA,EAAD,CAAK/F,UAAU,4BAAf,SACE,wBACEuH,GAAG,gBACHhE,QA7BY,WAClBgF,EAASS,QA6BHhJ,UAAU,4BAHZ,sBAQF,eAACgG,GAAA,EAAD,WACE,cAACD,GAAA,EAAD,CAAK/F,UAAU,4BAAf,SACE,cAACuG,GAAA,EAAD,CAAKD,GAAI,EAAT,SACE,eAACN,GAAA,EAAKE,MAAN,CAAYrD,GAAI0D,KAAKvG,UAAU,eAAemG,UAAU,gBAAxD,UACE,cAACH,GAAA,EAAKI,MAAN,0BACA,cAACJ,GAAA,EAAKQ,QAAN,CACEE,SAAU,SAACjB,GACT0C,EAAS1C,EAAMC,OAAOC,QAExBA,MAAO3E,WAKf,cAAC+E,GAAA,EAAD,CAAK/F,UAAU,4BAAf,SACE,wBAAQA,UAAU,UAAUsD,KAAK,SAASC,QAASqC,EAAnD,6BC/BKqD,GA1CC,WAEd,MAA0BtI,YAASxB,EAAiB,CAClDiD,UAAW,CAAE2G,YAAaxG,GAAKqB,aAAa/C,KAAKqE,QAD3CtE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAIXjB,GAAa,OAAJiB,QAAI,IAAJA,OAAA,EAAAA,EAAMqI,WAAY,GAEjC,OAAItI,EACK,6CAIP,gCACE,qBAAIZ,UAAU,2BAAd,UAA0CuC,GAAKqB,aAAa/C,KAAKqE,KAAjE,eACCtF,EAAOK,KAAI,SAACC,GAAD,OACV,cAACY,EAAA,EAAD,UACE,eAAC6B,GAAA,EAAD,CAAM3C,UAAU,mBAAhB,UACE,cAAC2C,GAAA,EAAKC,OAAN,CAAaC,GAAG,KAAK7C,UAAU,cAA/B,SACGE,EAAMc,QAET,eAAC2B,GAAA,EAAKG,KAAN,CAAW9C,UAAU,aAArB,UACE,eAAC2C,GAAA,EAAKI,MAAN,CAAY/C,UAAU,cAAtB,UACE,mBAAGA,UAAU,wBADf,IAC2CE,EAAM8C,eAEjD,cAAC,IAAD,CAAM7C,GAAE,kBAAaD,EAAME,KAA3B,SACE,uBAAO6C,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAApC,SACE,wBAAQE,IAAKnD,EAAMI,SAAUgD,KAAK,kBAGtC,sBAAKtD,UAAU,cAAf,UAA6B,mBAAGA,UAAU,gBAA1C,KAA+DuC,GAAKqB,aAAa/C,KAAKqE,QACtF,8BACE,cAAC,IAAD,CAAMlF,UAAU,eAAeG,GAAE,sBAAiBD,EAAME,KAAxD,SAA+D,mBAAGJ,UAAU,oCCpBtFmJ,GAAWC,YAAe,CAC9BC,IAAK,aAGDC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAE1BrI,EAAQK,aAAaE,QAAQ,YAEnC,MAAO,CACL8H,QAAQ,2BACHA,GADE,IAELC,cAAetI,EAAK,iBAAaA,GAAU,SAK3CuI,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBY,MAAO,IAAIC,MAqCEC,OAlCf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBP,OAAQA,GAAxB,SACE,eAAC,IAAD,WACE,sBAAK3J,UAAU,sBAAf,UACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAOmK,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAAlB,SACE,cAACC,GAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,uBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,MAAlB,SACE,cAAC,GAAD,SAGJ,cAAC,GAAD,UCzDOE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1997d88b.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const QUERY_VIDEOS = gql`\n  query allVids {\n    videos {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n      videoAuthor\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_VIDEO = gql`\n  query singleVid($videoId: ID!) {\n    video(videoId: $videoId) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n      likedBy\n      dislikedBy\n    }\n  }\n`;\n\nexport const QUERY_MY_VIDEOS = gql`\n  query myVids($videoAuthor: String!) {\n    myVideos(videoAuthor: $videoAuthor) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n    }\n  }\n`\n\nexport const QUERY_USERS = gql`\n  query allUsers {\n    users {\n      _id\n      name\n      email\n      level\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_USER = gql`\n  query singleUser($id: ID!) {\n    user(_id: $id) {\n      name\n      email\n      level\n    }\n  }\n`;\n\nexport const QUERY_GENRES = gql`\n  query allGenres {\n    genres {\n      name\n      videos\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_GENRE = gql`\n  query singleGenre($id: ID!) {\n    genre(_id: $id) {\n      name\n      videos\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      name\n      level\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_USER = gql`\n  mutation addUser($name: String!, $email: String!, $password: String!, $level: Int) {\n    addUser(name: $name, email: $email, password: $password, level: $level) {\n      token\n    }\n  }\n`;\n\nexport const ADD_VIDEO = gql`\n  mutation addVideo($title: String!, $cloudURL: String!, $videoAuthor: String!) {\n    addVideo(title: $title, cloudURL: $cloudURL, videoAuthor: $videoAuthor) {\n      _id\n      title\n      cloudURL\n      videoAuthor\n      publishDate\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        name\n        level\n      }\n    }\n  }\n`;\n\nexport const VIDEO_METRICS = gql`\n  mutation videoMetrics($videoId: String, $views: Int) {\n    videoMetrics(videoId: $videoId, views: $views) {\n      views\n    }\n  }\n`;\n\nexport const UPDATE_LIKES = gql`\nmutation updateLikes($videoId: String, $user: String) {\n  updateLikes(videoId: $videoId, user: $user) {\n    _id\n    title\n    cloudURL\n    likes\n    dislikes\n    views\n    publishDate\n    likedBy\n    dislikedBy\n  }\n}\n`;\n\nexport const UPDATE_DISLIKES = gql`\n  mutation updateDislikes($videoId: String, $user: String) {\n    updateDislikes(videoId: $videoId, user: $user) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n      likedBy\n      dislikedBy\n    }\n  }\n`;\n\nexport const REMOVE_VIDEO = gql`\n  mutation removeVideo($videoId: ID!) {\n    removeVideo(videoId: $videoId) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n    }\n  }\n`\n\nexport default ADD_VIDEO;\n\n\n\n\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HoverVideoPlayer from 'react-hover-video-player';\nimport Card from \"react-bootstrap/Card\";\nimport { useMutation } from \"@apollo/client\";\nimport { VIDEO_METRICS } from \"../../utils/mutations\";\n// Videos appearing on home page\nconst VideoList = ({ videos }) => {\n  const [videoMetrics, { error }] = useMutation(VIDEO_METRICS);\n  // If there are no videos, \"No Videos Yet!\" message appears\n  if (!videos.length) {\n    return <h3 className=\"roboto-font2\">No Videos Yet!</h3>;\n  }\n  // Updates video views on page reload\n  const updateMetrics = async (videoId, videoViews) => {\n    const newView = (videoViews + .5); // Add .5 because added 2 views when page reloaded\n    try {\n      await videoMetrics({\n        variables: {\n          videoId: videoId,\n          likes: 0,\n          dislikes: 0,\n          views: newView,\n        },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      {videos &&\n        videos.map((video) => (\n          <div className=\"col-md-2 col-sm-6\" key={video._id}>\n          \n            {/* <Card.Header as=\"h2\" className=\"video-title\">{video.title}</Card.Header>\n            <Card.Body className=\"video-body\"> */}\n              {/* <Card.Title className=\"roboto-font\"><i className=\"fas fa-calendar-alt\"></i>  {video.publishDate}</Card.Title> */}\n              <Link to={`/videos/${video._id}`}>\n              <HoverVideoPlayer videoSrc={video.cloudURL} volume={0.5} muted={false}  disablePictureInPicture={false}/>\n                {/* <video playsInline style={{ width: 660, height: \"auto\" }} onClick={updateMetrics(video._id, video.views)}>\n                  <source src={video.cloudURL} type=\"video/mp4\" />\n                </video> */}\n              </Link>\n              {/* <div className=\"roboto-font\"><i className=\"fas fa-user\"></i>  {video.videoAuthor}</div> */}\n            {/* </Card.Body > */}\n          </div>\n        ))\n      }\n    </div >\n  );\n};\n\nexport default VideoList;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { QUERY_VIDEOS } from \"../utils/queries\";\nimport VideoList from \"../components/VideoList\";\n// Home page\nconst Home = () => {\n  // Queries videos\n  const { loading, data } = useQuery(QUERY_VIDEOS);\n  const videos = data?.videos || [];\n\n  return (\n    <Container fluid className=\"content-warp\">\n\n          {loading ? (\n            <div>Loading...</div>\n          ) : (   \n            <VideoList videos={videos} title=\"HEADER TEXT\" /> \n          )}\n\n    </Container>\n  );\n};\n\nexport default Home;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    if (!this.getToken()) {\n      return false;\n    }\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Auth from \"../utils/auth\";\nimport { QUERY_SINGLE_VIDEO } from \"../utils/queries\";\nimport { REMOVE_VIDEO } from \"../utils/mutations\";\nimport Card from \"react-bootstrap/Card\";\n\nconst VideoCrud = () => {\n  const { videoId } = useParams();\n  // Queries singe video based on params video id\n  const { loading, data } = useQuery(QUERY_SINGLE_VIDEO, {\n    variables: { videoId: videoId },\n  });\n  // Delete video mutation\n  const [deleteVideo, { error }] = useMutation(REMOVE_VIDEO);\n  const video = data?.video || {};\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  // Function to delete video\n  async function deleteFunction(videoId) {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) { // if not logged in, user can't delete video\n      return false;\n    }\n    try {\n      const { data } = await deleteVideo({\n        variables: { videoId }\n      })\n    } catch (err) {\n      console.log(err)\n    }\n    if (!token) {\n      return false;\n    }\n  }\n  // On click, video is deleted and user is taken back to the home page\n  const deleteClick = () => {\n    deleteFunction(videoId);\n    window.location.assign('/');\n  };\n\n  return (\n    <Container>\n      <Card className=\"text-center my-3\">\n        <Card.Header as=\"h2\" className=\"video-title\">\n          {video.title}\n        </Card.Header>\n        <Card.Body className=\"video-body\">\n          <Card.Title className=\"roboto-font\"> <i className=\"fas fa-calendar-alt\"></i> {video.publishDate}</Card.Title>\n          <video style={{ width: 660, height: \"auto\" }} controls>\n            <source src={video.cloudURL} type=\"video/mp4\" />\n          </video>\n          <h2 className=\"roboto-font\">Are you sure you want to delete your video? This action cannot be undone</h2>\n          <div>\n            <button\n              className=\"mb-3 button6\"\n              type=\"submit\"\n              onClick={deleteClick}\n            >\n              Delete\n            </button>\n          </div>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default VideoCrud;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { QUERY_SINGLE_VIDEO } from \"../utils/queries\";\nimport { VIDEO_METRICS, UPDATE_LIKES, UPDATE_DISLIKES } from \"../utils/mutations\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Auth from \"../utils/auth\";\n// Single video page\nconst SingleVideo = () => {\n  const { videoId } = useParams();\n  // if user is not logged in, level is -1 which restricts certain privileges \n  let level = -1;\n  let userId = \"\";\n  if (Auth.getProfile()) {\n    level = Auth.getProfile().data.level;\n    userId = Auth.getProfile().data._id;\n  };\n  const [videoMetrics, { error }] = useMutation(VIDEO_METRICS);\n  const [updateLikes, { err }] = useMutation(UPDATE_LIKES);\n  const [updateDislikes, { erro }] = useMutation(UPDATE_DISLIKES);\n  // Queries singe video based on params video id\n  const { loading, data } = useQuery(QUERY_SINGLE_VIDEO, {\n    variables: { videoId: videoId },\n  });\n\n  let disable = false;\n\n  if (loading) {\n    return <div>Loading...</div>;\n  } else {\n    const video = data?.video || {};\n\n    if (video.likedBy.includes(userId) || video.dislikedBy.includes(userId)) {\n      disable = true;\n    }\n\n    let viewsTag = \"\";\n    if (level > 0) {\n      viewsTag = `Views: ${video.views}`\n    } else { viewsTag = \"\" };\n    // Tracks views based on page reload\n    const updateMetrics = () => {\n      const newView = (video.views + 1);\n      try {\n        videoMetrics({\n          variables: {\n            videoId: videoId,\n            views: newView,\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    // Like button functionality \n    const isLiked = async () => {\n      try {\n        await updateLikes({\n          variables: {\n            videoId: videoId,\n            user: userId,\n          },\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    // Calls to increase likes on click of like button\n    const clickLike = () => {\n      isLiked();\n      disable = true;\n    }\n    // Dislike button functionality \n    const isDisliked = async () => {\n      try {\n        await updateDislikes({\n          variables: {\n            videoId: videoId,\n            user: userId,\n          }\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    // Calls to increase dislikes on click of dislike button\n    const clickDislike = () => {\n      isDisliked()\n      disable = true;\n    }\n    // updates views on page reload\n    updateMetrics();\n\n    return (\n      <div>\n        <Container>\n          <Card className=\"text-center my-3\">\n            <Card.Header as=\"h2\" className=\"video-title\">{video.title}</Card.Header>\n            <Card.Body className=\"video-body\">\n              <Card.Title className=\"roboto-font\">{video.publishDate}</Card.Title>\n              <Card.Title className=\"roboto-font\">{viewsTag}</Card.Title>\n              <video style={{ width: 660, height: \"auto\" }} controls>\n                <source src={video.cloudURL} type=\"video/mp4\" />\n              </video>\n              <p className=\"roboto-font\">Likes: {video.likes}</p><p className=\"roboto-font\"> Dislikes: {video.dislikes}</p>\n\n              {level >= 0 ? (<p><button className='button6' disabled={disable} onClick={clickLike}><i className=\"fas fa-thumbs-up\"></i></button>\n\n                <button className='button6' disabled={disable} onClick={clickDislike}><i className=\"fas fa-thumbs-down\"></i></button></p>): (\"\")}\n\n\n            </Card.Body >\n          </Card >\n        </Container >\n      </div >\n    );\n  }\n};\n\nexport default SingleVideo;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Form from 'react-bootstrap/Form'\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  // Submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <h1 className=\"login-header\">Signup</h1>\n      <Container className=\"loginForm\">\n        <Row className=\"justify-content-md-center padding-login\">\n          {data ? (\n            <p>\n              Success!You may now head{\" \"}\n              <Link to=\"/\">back to the homepage.</Link>\n            </p>\n          ) : (\n            <Form onSubmit={handleFormSubmit}>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={4}>Name</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"name\" type=\"name\" placeholder=\"First, Last\" value={formState.name}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={4}>Email</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" value={formState.email}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\n                <Form.Label column sm={4}>Password</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" value={formState.password}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\">\n                <Col>\n                  <button type=\"submit\" className=\"button6\">Sign up</button>\n                </Col>\n              </Form.Group>\n\n            </Form>\n          )}\n          {error && (\n            <div className=\"my-3 p-3 text-white\">\n              {error.message}\n            </div>\n          )}\n        </Row>\n      </Container>\n    </div >\n\n  );\n};\n\nexport default Signup;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Form from 'react-bootstrap/Form'\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n    // Clear form values on submit\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <div>\n      <h1 className=\"login-header\">Login</h1>\n      <Container className=\"loginForm\">\n        <Row className=\"justify-content-md-center padding-login\">\n          {data ? (\n            <p>\n              Success! You may now head{\" \"}\n              <Link to=\"/\">back to the homepage.</Link>\n            </p>\n          ) : (\n            <Form onSubmit={handleFormSubmit}>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={4}>Email</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" value={formState.email}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\n                <Form.Label column sm={4}>Password</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" value={formState.password}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\">\n                <Col>\n                  <button type=\"submit\" className=\"button6\">Sign in</button>\n                </Col>\n              </Form.Group>\n            </Form>\n          )}\n          {error && (\n            <div className=\"my-3 p-3 text-white\">\n              {error.message}\n            </div>\n          )}\n        </Row>\n      </Container>\n    </div >\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Auth from '../../utils/auth';\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Button from 'react-bootstrap/Button';\n\nconst Header = () => {\n  // if user is not logged in, level is -1 which restricts certain privileges \n  let level = -1;\n  console.log(Auth.getProfile());\n  if (Auth.getProfile()) {\n    level = Auth.getProfile().data.level\n  };\n  // Calls logout function on click\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <div className='header-warp'>\n    <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\n    <Container fluid>\n      <Navbar.Brand href=\"#\"><img src='https://tiktits.com/assets/site/img/logo.svg' alt=\"\" /></Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"navbarScroll\" />\n      <Navbar.Collapse id=\"navbarScroll\">\n        <Nav\n          className=\"me-auto my-2 my-lg-0\"\n          style={{ maxHeight: '100px' }}\n          navbarScroll\n        >\n          <Link className=\"nav-item nav-link\" to=\"/\">Home</Link>\n          {Auth.loggedIn() ? (\n            <>\n              {level === 1 || level === 3 ? (<Link className=\"nav-item nav-link\" to=\"/upload\"> Upload</Link>) : (\"\")}\n              {level === 1 || level === 3 ? (<Link className=\"nav-item nav-link\" to=\"/me\">\n                View My Profile\n              </Link>) : (\"\")}\n              <Link className=\"nav-item nav-link\" onClick={logout}>\n                Logout\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"nav-item nav-link\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </Nav>\n        \n        <Form className=\"d-flex\">\n          <Form.Control\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"me-2\"\n            aria-label=\"Search\"\n          />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n  </div>\n  );\n};\n\nexport default Header;\n ","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n        <h4 className='footer-font'>&copy; {new Date().getFullYear()} - Prequel Inc.</h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport ADD_VIDEO from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\n// Upload page using cloudinary\nfunction CloudinaryUploadWidget() {\n  const [title, setTitle] = useState(\"\");\n  const [URL, setURL] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [addVideo, { error }] = useMutation(ADD_VIDEO);\n  // Upload widget courtesy of cloudinary\n  const myWidget = window.cloudinary.createUploadWidget(\n    {\n      cloudName: \"dporcepgm\",\n      uploadPreset: \"tiktok_up\",\n    },\n    (error, result) => {\n      if (!error && result && result.event === \"success\") { // If video upload is a success, its logged in console\n        console.log(\"Done! Here is the video info: \", result.info);\n        // When upload is complete, cloudinary gives url for video\n        setURL(result.info.secure_url); // Set URL state for GraphQL database, adds url to database\n      }\n    }\n  );\n  // When upload button is clicked, myWidget is called to open\n  const uploadClick = () => {\n    myWidget.open();\n  };\n  // Submit form for title & video URL\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      addVideo({\n        variables: {\n          title: title, // title fromm input field\n          cloudURL: URL, // URL from cloudinary upload\n          videoAuthor: Auth.getProfile().data.name, // author from logged in user\n        },\n      });\n      setTitle(\"\"); // Input field goes back to blank on submit\n      window.location.assign('/'); // On submit, user is taken back to the home page\n    } catch (err) {\n      console.error(err); // If there is an error its logged in the console\n    }\n  };\n\n  return (\n    <Container className=\"upload-container justify-content-md-center\">\n      <Row className=\"justify-content-md-center upload-padding-top\">\n        <Form.Label>Upload Your Video</Form.Label>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <button\n          id=\"upload_widget\"\n          onClick={uploadClick}\n          className=\"cloudinary-button button6\"\n        >\n          Upload\n        </button>\n      </Row>\n      <Form>\n        <Row className=\"justify-content-md-center\">\n          <Col sm={5}>\n            <Form.Group as={Col} className=\"upload-label\" controlId=\"formGridEmail\">\n              <Form.Label  >Video Title</Form.Label>\n              <Form.Control\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                }}\n                value={title}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <button className='button6' type=\"submit\" onClick={handleFormSubmit}>\n            Submit\n          </button>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CloudinaryUploadWidget;","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Auth from \"../utils/auth\";\nimport { QUERY_MY_VIDEOS } from \"../utils/queries\";\n// Profile page for user to see only their videos\nconst Profile = () => {\n  // Queries user who is logged in videos\n  const { loading, data } = useQuery(QUERY_MY_VIDEOS, {\n    variables: { videoAuthor: Auth.getProfile().data.name },\n  });\n\n  const videos = data?.myVideos || [];\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1 className=\"roboto-font2 video-title\">{Auth.getProfile().data.name}'s Videos</h1>\n      {videos.map((video) => (\n        <Container>\n          <Card className=\"text-center my-3\">\n            <Card.Header as=\"h2\" className=\"video-title\">\n              {video.title}\n            </Card.Header>\n            <Card.Body className=\"video-body\">\n              <Card.Title className=\"roboto-font\">\n                <i className=\"fas fa-calendar-alt\"></i> {video.publishDate}\n              </Card.Title>\n              <Link to={`/videos/${video._id}`}>\n                <video style={{ width: 660, height: \"auto\" }}>\n                  <source src={video.cloudURL} type=\"video/mp4\" />\n                </video>\n              </Link>\n              <div className=\"roboto-font\"><i className=\"fas fa-user\"></i>  {Auth.getProfile().data.name}</div>\n              <div>\n                <Link className=\"delete-trash\" to={`/videosCrud/${video._id}`}><i className=\"fas fa-trash\"></i></Link>\n              </div>\n            </Card.Body>\n          </Card>\n        </Container>\n      ))}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport Home from \"./pages/Home\";\nimport VideoCrud from \"./pages/VideoCrud\"\nimport Video from \"./pages/Video\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport CloudinaryUploadWidget from \"./components/Upload\";\nimport Profile from \"./pages/Profile\"\n// Query and mutate models on localhost:3001/graphql\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"content-positioning\">\n          <Header />\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/upload\">\n            <CloudinaryUploadWidget />\n          </Route>\n          <Route exact path=\"/videos/:videoId\">\n            <Video />\n          </Route>\n          <Route exact path=\"/videosCrud/:videoId\">\n            <VideoCrud />\n          </Route>\n          <Route exact path=\"/me\">\n            <Profile />\n          </Route>\n        </div>\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}