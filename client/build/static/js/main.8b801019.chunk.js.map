{"version":3,"sources":["utils/queries.js","utils/auth.js","pages/Profile.js","pages/Home.js","utils/mutations.js","pages/VideoCrud.js","pages/Video.js","pages/Signup.js","pages/Login.js","components/Header/profile.js","components/Header/index.js","components/Footer/index.js","components/Upload/index.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_VIDEOS","gql","QUERY_SINGLE_VIDEO","QUERY_MY_VIDEOS","this","getToken","decode","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","Profile","useQuery","variables","videoAuthor","Auth","getProfile","data","name","loading","videos","myVideos","className","map","video","Container","Card","Header","as","title","Body","Title","publishDate","to","_id","style","width","height","src","cloudURL","type","console","log","AllVideos","Home","settings","dots","infinite","autoplaySpeed","adaptiveHeight","autoplay","speed","centerPadding","slidesToShow","breakpoint","slidesToScroll","initialSlide","fluid","Row","Col","sm","class","length","videoSrc","volume","muted","disablePictureInPicture","likes","views","href","ADD_USER","ADD_VIDEO","LOGIN_USER","VIDEO_METRICS","UPDATE_LIKES","UPDATE_DISLIKES","REMOVE_VIDEO","VideoCrud","videoId","useParams","useMutation","deleteVideo","error","a","loggedIn","controls","onClick","deleteFunction","SingleVideo","level","userId","videoMetrics","updateLikes","err","updateDislikes","erro","disable","likedBy","includes","dislikedBy","viewsTag","isLiked","user","isDisliked","newView","updateMetrics","dislikes","disabled","Signup","useState","email","password","formState","setFormState","addUser","handleChange","event","target","value","handleFormSubmit","preventDefault","login","Form","onSubmit","Group","controlId","Label","column","Control","placeholder","onChange","message","Login","props","ProFile","Fragment","Dropdown","autoClose","Toggle","id","Menu","Item","logout","Navbar","bg","expand","fixed","Brand","alt","Collapse","Nav","maxHeight","navbarScroll","Footer","useLocation","useHistory","getFullYear","CloudinaryUploadWidget","setTitle","URL","setURL","addVideo","myWidget","cloudinary","createUploadWidget","cloudName","uploadPreset","result","info","secure_url","open","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","Video","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b801019.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const QUERY_VIDEOS = gql`\n  query allVids {\n    videos {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n      videoAuthor\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_VIDEO = gql`\n  query singleVid($videoId: ID!) {\n    video(videoId: $videoId) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n      likedBy\n      dislikedBy\n    }\n  }\n`;\n\nexport const QUERY_MY_VIDEOS = gql`\n  query myVids($videoAuthor: String!) {\n    myVideos(videoAuthor: $videoAuthor) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n    }\n  }\n`\n\nexport const QUERY_USERS = gql`\n  query allUsers {\n    users {\n      _id\n      name\n      email\n      level\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_USER = gql`\n  query singleUser($id: ID!) {\n    user(_id: $id) {\n      name\n      email\n      level\n    }\n  }\n`;\n\nexport const QUERY_GENRES = gql`\n  query allGenres {\n    genres {\n      name\n      videos\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_GENRE = gql`\n  query singleGenre($id: ID!) {\n    genre(_id: $id) {\n      name\n      videos\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      name\n      level\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    if (!this.getToken()) {\n      return false;\n    }\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Auth from \"../utils/auth\";\nimport { QUERY_MY_VIDEOS } from \"../utils/queries\";\n// Profile page for user to see only their videos\nconst Profile = () => {\n  // Queries user who is logged in videos\n  const { loading, data } = useQuery(QUERY_MY_VIDEOS, {\n    variables: { videoAuthor: Auth.getProfile().data.name },\n  });\n\n  const videos = data?.myVideos || [];\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1 className=\"roboto-font2 video-title\">{Auth.getProfile().data.name}'s Videos</h1>\n      {videos.map((video) => (\n        <Container>\n          <Card className=\"text-center my-3\">\n            <Card.Header as=\"h2\" className=\"video-title\">\n              {video.title}\n            </Card.Header>\n            <Card.Body className=\"video-body\">\n              <Card.Title className=\"roboto-font\">\n                <i className=\"fas fa-calendar-alt\"></i> {video.publishDate}\n              </Card.Title>\n              <Link to={`/videos/${video._id}`}>\n                <video style={{ width: 660, height: \"auto\" }}>\n                  <source src={video.cloudURL} type=\"video/mp4\" />\n                </video>\n              </Link>\n              <div className=\"roboto-font\"><i className=\"fas fa-user\"></i>  {Auth.getProfile().data.name}</div>\n              <div>\n                <Link className=\"delete-trash\" to={`/videosCrud/${video._id}`}><i className=\"fas fa-trash\"></i></Link>\n              </div>\n            </Card.Body>\n          </Card>\n        </Container>\n      ))}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { QUERY_VIDEOS } from \"../utils/queries\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Link , Routes , Route} from \"react-router-dom\";\nimport HoverVideoPlayer from 'react-hover-video-player';\nimport AllVideos from \"./Profile\";\nimport { AiFillHeart } from 'react-icons/ai';\nimport { GrView } from 'react-icons/gr';\nconsole.log(AllVideos);\n// Home page\nconst Home = () => {\n  // Queries videos\n  const { loading, data } = useQuery(QUERY_VIDEOS);\n  const videos = data?.videos || [];\n  const settings = {\n    dots: false,\n    infinite: true,\n    autoplaySpeed:3000,\n    adaptiveHeight: true,\n    autoplay: true,\n    speed: 500,\n    centerPadding: \"60px\",\n    slidesToShow:5,\n    adaptiveHeight: true,\n    slidesToScroll: 1,\n    responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 5,\n            slidesToScroll: 3,\n            infinite: true,\n            dots: true\n          }\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 2,\n            initialSlide: 2\n          }\n        },\n        {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1\n          }\n        }\n      ]\n  };\n  return (\n    <Container fluid className=\"content-warp\"> \n        <Row>\n            <Col sm={9}>\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( \n            \n                    <div class=\"mt-ttl\">\n                        <div class=\"ttl-filter mt-ttl flex\">\n                            {!videos.length ? (<h3 className=\"roboto-font2\">No Videos Yet!</h3>): (\n                                <div class=\"ttl\">\n                                <h2>Trending Porn Video</h2>\n                                <Slider {...settings}> \n                                {videos &&\n                                videos.map((video) => ( \n                                    <div  key={video._id}>\n                                        <Link to={`/videos/${video._id}`}>\n                                        <HoverVideoPlayer videoSrc={video.cloudURL} volume={0.5} muted={false}  disablePictureInPicture={false}/>\n                                        <div class=\"LIKE-over\">\n                                            <span className=\"video-likes-wp\"><AiFillHeart/>   <span className=\"video-likes\">{video.likes}</span></span>\n                                            <span className=\"video-views-wp\"><GrView/>  <span className=\"video-likes\">{video.views}</span></span>\n                                        </div>\n                                        </Link>  \n                                    </div>\n                                ))\n                                }\n                                </Slider>                   \n                                <Link to=\"/AllVideos\">About</Link>\n                                <h2>Best Hot Video</h2>\n                                <Slider {...settings}> \n                                {videos &&\n                                videos.map((video) => ( \n                                    <div  key={video._id}>\n                                        <Link to={`/videos/${video._id}`}>\n                                        <HoverVideoPlayer videoSrc={video.cloudURL} volume={0.5} muted={false}  disablePictureInPicture={false}/>\n                                        <div class=\"LIKE-over\">\n                                            <span className=\"video-likes-wp\"><AiFillHeart/>   <span className=\"video-likes\">{video.likes}</span></span>\n                                            <span className=\"video-views-wp\"><GrView/>  <span className=\"video-likes\">{video.views}</span></span>\n                                        </div>\n                                        </Link>  \n                                    </div>\n                                ))\n                                }\n                                </Slider>  \n                            </div>\n                            )} \n\n                        </div>  \n                    </div>  \n                \n              \n          )}\n          </Col>\n            <Col sm={3} className=\"aside\" >\n\n                        <div className=\"ttl\">\n                            <h3>Trending Searches Hot video</h3>\n                        </div>\n                        <div className=\"tags-cloud mt-block\">\n                            <ul>\n                                <li><a className=\"gradient-box\" href=\"videos/onlyfans\">OnlyFans</a></li><li><a class=\"gradient-box\" href=\"videos/foursome\">Foursome</a></li><li><a class=\"gradient-box\" href=\"videos/stripchat\">Stripchat</a></li><li><a class=\"gradient-box\" href=\"videos/hot-falling-devil\">Hot Falling Devil</a></li><li><a class=\"gradient-box\" href=\"videos/edging\">Edging</a></li><li><a class=\"gradient-box\" href=\"videos/accidental\">Accidental</a></li><li><a class=\"gradient-box\" href=\"videos/cum-fetish\">Cum Fetish</a></li><li><a class=\"gradient-box\" href=\"videos/fake-boobs\">Fake Boobs</a></li><li><a class=\"gradient-box\" href=\"videos/top\">Top</a></li><li><a class=\"gradient-box\" href=\"videos/scottish\">Scottish</a></li><li><a class=\"gradient-box\" href=\"videos/cherokee-d-ass\">Cherokee D Ass</a></li><li><a class=\"gradient-box\" href=\"videos/post-orgasm\">Post Orgasm</a></li><li><a class=\"gradient-box\" href=\"videos/fisting\">Fisting</a></li><li><a class=\"gradient-box\" href=\"videos/honey-gold\">Honey Gold</a></li><li><a class=\"gradient-box\" href=\"videos/husband\">Husband</a></li><li><a class=\"gradient-box\" href=\"videos/natural\">Natural</a></li>\n                            </ul>\n                        </div>\n                        <div className=\"mt-block adv-block no-desctop\"></div>\n            </Col>\n            </Row>            \n    </Container>\n  );\n};\n\nexport default Home;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_USER = gql`\n  mutation addUser($name: String!, $email: String!, $password: String!, $level: Int) {\n    addUser(name: $name, email: $email, password: $password, level: $level) {\n      token\n    }\n  }\n`;\n\nexport const ADD_VIDEO = gql`\n  mutation addVideo($title: String!, $cloudURL: String!, $videoAuthor: String!) {\n    addVideo(title: $title, cloudURL: $cloudURL, videoAuthor: $videoAuthor) {\n      _id\n      title\n      cloudURL\n      videoAuthor\n      publishDate\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        name\n        level\n      }\n    }\n  }\n`;\n\nexport const VIDEO_METRICS = gql`\n  mutation videoMetrics($videoId: String, $views: Int) {\n    videoMetrics(videoId: $videoId, views: $views) {\n      views\n    }\n  }\n`;\n\nexport const UPDATE_LIKES = gql`\nmutation updateLikes($videoId: String, $user: String) {\n  updateLikes(videoId: $videoId, user: $user) {\n    _id\n    title\n    cloudURL\n    likes\n    dislikes\n    views\n    publishDate\n    likedBy\n    dislikedBy\n  }\n}\n`;\n\nexport const UPDATE_DISLIKES = gql`\n  mutation updateDislikes($videoId: String, $user: String) {\n    updateDislikes(videoId: $videoId, user: $user) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n      likedBy\n      dislikedBy\n    }\n  }\n`;\n\nexport const REMOVE_VIDEO = gql`\n  mutation removeVideo($videoId: ID!) {\n    removeVideo(videoId: $videoId) {\n      _id\n      title\n      cloudURL\n      likes\n      dislikes\n      views\n      publishDate\n    }\n  }\n`\n\nexport default ADD_VIDEO;\n\n\n\n\n","import React from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Auth from \"../utils/auth\";\nimport { QUERY_SINGLE_VIDEO } from \"../utils/queries\";\nimport { REMOVE_VIDEO } from \"../utils/mutations\";\nimport Card from \"react-bootstrap/Card\";\n\nconst VideoCrud = () => {\n  const { videoId } = useParams();\n  // Queries singe video based on params video id\n  const { loading, data } = useQuery(QUERY_SINGLE_VIDEO, {\n    variables: { videoId: videoId },\n  });\n  // Delete video mutation\n  const [deleteVideo, { error }] = useMutation(REMOVE_VIDEO);\n  const video = data?.video || {};\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  // Function to delete video\n  async function deleteFunction(videoId) {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) { // if not logged in, user can't delete video\n      return false;\n    }\n    try {\n      const { data } = await deleteVideo({\n        variables: { videoId }\n      })\n    } catch (err) {\n      console.log(err)\n    }\n    if (!token) {\n      return false;\n    }\n  }\n  // On click, video is deleted and user is taken back to the home page\n  const deleteClick = () => {\n    deleteFunction(videoId);\n    window.location.assign('/');\n  };\n\n  return (\n    <Container>\n      <Card className=\"text-center my-3\">\n        <Card.Header as=\"h2\" className=\"video-title\">\n          {video.title}\n        </Card.Header>\n        <Card.Body className=\"video-body\">\n          <Card.Title className=\"roboto-font\"> <i className=\"fas fa-calendar-alt\"></i> {video.publishDate}</Card.Title>\n          <video style={{ width: 660, height: \"auto\" }} controls>\n            <source src={video.cloudURL} type=\"video/mp4\" />\n          </video>\n          <h2 className=\"roboto-font\">Are you sure you want to delete your video? This action cannot be undone</h2>\n          <div>\n            <button\n              className=\"mb-3 button6\"\n              type=\"submit\"\n              onClick={deleteClick}\n            >\n              Delete\n            </button>\n          </div>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default VideoCrud;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { QUERY_SINGLE_VIDEO } from \"../utils/queries\";\nimport { VIDEO_METRICS, UPDATE_LIKES, UPDATE_DISLIKES } from \"../utils/mutations\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Auth from \"../utils/auth\";\n// Single video page\nconst SingleVideo = () => {\n  const { videoId } = useParams();\n  // if user is not logged in, level is -1 which restricts certain privileges \n  let level = -1;\n  let userId = \"\";\n  if (Auth.getProfile()) {\n    level = Auth.getProfile().data.level;\n    userId = Auth.getProfile().data._id;\n  };\n  const [videoMetrics, { error }] = useMutation(VIDEO_METRICS);\n  const [updateLikes, { err }] = useMutation(UPDATE_LIKES);\n  const [updateDislikes, { erro }] = useMutation(UPDATE_DISLIKES);\n  // Queries singe video based on params video id\n  const { loading, data } = useQuery(QUERY_SINGLE_VIDEO, {\n    variables: { videoId: videoId },\n  });\n\n  let disable = false;\n\n  if (loading) {\n    return <div>Loading...</div>;\n  } else {\n    const video = data?.video || {};\n\n    if (video.likedBy.includes(userId) || video.dislikedBy.includes(userId)) {\n      disable = true;\n    }\n\n    let viewsTag = \"\";\n    if (level > 0) {\n      viewsTag = `Views: ${video.views}`\n    } else { viewsTag = \"\" };\n    // Tracks views based on page reload\n    const updateMetrics = () => {\n      const newView = (video.views + 1);\n      try {\n        videoMetrics({\n          variables: {\n            videoId: videoId,\n            views: newView,\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    // Like button functionality \n    const isLiked = async () => {\n      try {\n        await updateLikes({\n          variables: {\n            videoId: videoId,\n            user: userId,\n          },\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    // Calls to increase likes on click of like button\n    const clickLike = () => {\n      isLiked();\n      disable = true;\n    }\n    // Dislike button functionality \n    const isDisliked = async () => {\n      try {\n        await updateDislikes({\n          variables: {\n            videoId: videoId,\n            user: userId,\n          }\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    // Calls to increase dislikes on click of dislike button\n    const clickDislike = () => {\n      isDisliked()\n      disable = true;\n    }\n    // updates views on page reload\n    updateMetrics();\n\n    return (\n      <div>\n        <Container>\n          <Card className=\"text-center my-3\">\n            <Card.Header as=\"h2\" className=\"video-title\">{video.title}</Card.Header>\n            <Card.Body className=\"video-body\">\n              <Card.Title className=\"roboto-font\">{video.publishDate}</Card.Title>\n              <Card.Title className=\"roboto-font\">{viewsTag}</Card.Title>\n              <video style={{ width: 660, height: \"auto\" }} controls>\n                <source src={video.cloudURL} type=\"video/mp4\" />\n              </video>\n              <p className=\"roboto-font\">Likes: {video.likes}</p><p className=\"roboto-font\"> Dislikes: {video.dislikes}</p>\n\n              {level >= 0 ? (<p><button className='button6' disabled={disable} onClick={clickLike}><i className=\"fas fa-thumbs-up\"></i></button>\n\n                <button className='button6' disabled={disable} onClick={clickDislike}><i className=\"fas fa-thumbs-down\"></i></button></p>): (\"\")}\n\n\n            </Card.Body >\n          </Card >\n        </Container >\n      </div >\n    );\n  }\n};\n\nexport default SingleVideo;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Form from 'react-bootstrap/Form'\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  // Submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <h1 className=\"login-header\">Signup</h1>\n      <Container className=\"loginForm\">\n        <Row className=\"justify-content-md-center padding-login\">\n          {data ? (\n            <p>\n              Success!You may now head{\" \"}\n              <Link to=\"/\">back to the homepage.</Link>\n            </p>\n          ) : (\n            <Form onSubmit={handleFormSubmit}>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={4}>Name</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"name\" type=\"name\" placeholder=\"First, Last\" value={formState.name}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={4}>Email</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" value={formState.email}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\n                <Form.Label column sm={4}>Password</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" value={formState.password}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\">\n                <Col>\n                  <button type=\"submit\" className=\"button6\">Sign up</button>\n                </Col>\n              </Form.Group>\n\n            </Form>\n          )}\n          {error && (\n            <div className=\"my-3 p-3 text-white\">\n              {error.message}\n            </div>\n          )}\n        </Row>\n      </Container>\n    </div >\n\n  );\n};\n\nexport default Signup;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Form from 'react-bootstrap/Form'\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n    // Clear form values on submit\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <div>\n      <h1 className=\"login-header\">Login</h1>\n      <Container className=\"loginForm\">\n        <Row className=\"justify-content-md-center padding-login\">\n          {data ? (\n            <p>\n              Success! You may now head{\" \"}\n              <Link to=\"/\">back to the homepage.</Link>\n            </p>\n          ) : (\n            <Form onSubmit={handleFormSubmit}>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={4}>Email</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" value={formState.email}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalPassword\">\n                <Form.Label column sm={4}>Password</Form.Label>\n                <Col sm={10}>\n                  <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" value={formState.password}\n                    onChange={handleChange} />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\">\n                <Col>\n                  <button type=\"submit\" className=\"button6\">Sign in</button>\n                </Col>\n              </Form.Group>\n            </Form>\n          )}\n          {error && (\n            <div className=\"my-3 p-3 text-white\">\n              {error.message}\n            </div>\n          )}\n        </Row>\n      </Container>\n    </div >\n  );\n};\n\nexport default Login;\n","import React from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport { Link } from 'react-router-dom';\r\nimport Auth from '../../utils/auth';  \r\nimport { RiUploadCloud2Fill } from 'react-icons/ri';\r\n\r\n\r\nconst ProFile = () =>{\r\n    let level = -1;\r\n    if (Auth.getProfile()) {\r\n      level = Auth.getProfile().data.level\r\n    };\r\n    // Calls logout function on click\r\n    const logout = (event) => {\r\n      event.preventDefault();\r\n      Auth.logout();\r\n    };\r\n    return (  \r\n        <React.Fragment>\r\n       \r\n        {Auth.loggedIn() ? (\r\n            <>\r\n              {level === 1 || level === 3 ? (<Link className=\"nav-item nav-link\" to=\"/upload\"> <RiUploadCloud2Fill/>  Upload video</Link>) : (\"\")}\r\n                <Dropdown className=\"d-inline mx-2\" autoClose=\"outside\">\r\n                <Dropdown.Toggle id=\"dropdown-autoclose-outside\">\r\n                    Hello, {Auth.getProfile().data.name}\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\"> {level === 1 || level === 3 ? (<Link className=\"nav-item nav-link\" to=\"/me\">\r\n                            View My Profile\r\n                        </Link>) : (\"\")}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\"> <Link className=\"nav-item nav-link\" onClick={logout}>\r\n                        Logout\r\n                    </Link></Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n             \r\n             \r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n              {/* <Link className=\"nav-item nav-link\" to=\"/signup\">\r\n                Signup\r\n              </Link> */}\r\n            </>\r\n          )}\r\n           \r\n  \r\n      </React.Fragment>\r\n      )    \r\n};\r\n\r\nexport default ProFile;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Auth from '../../utils/auth'; \nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Button from 'react-bootstrap/Button'; \nimport ProFile from './profile';\n\nconst Header = () => {\n  // if user is not logged in, level is -1 which restricts certain privileges \n  let level = -1;\n  if (Auth.getProfile()) {\n    level = Auth.getProfile().data.level\n  };\n  // Calls logout function on click\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <div className='header-warp'>\n    <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\n    <Container fluid>\n      <Navbar.Brand href=\"#\"><img src='https://tiktits.com/assets/site/img/logo.svg' alt=\"\" /></Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"navbarScroll\" />\n      <Navbar.Collapse id=\"navbarScroll\">\n        <Nav\n          className=\"me-auto my-2 my-lg-0\"\n          style={{ maxHeight: '100px' }}\n          navbarScroll\n        >\n          <Link className=\"nav-item nav-link\" to=\"/\">Home</Link>\n          \n        </Nav>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <ProFile/>\n        </Navbar.Collapse>\n      </Navbar.Collapse>\n      \n    </Container>\n  </Navbar>\n  </div>\n  );\n};\n\nexport default Header;\n ","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n        <h4 className='footer-font'>&copy; {new Date().getFullYear()} - NGUYENDAIDTVT2.</h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport ADD_VIDEO from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\n// Upload page using cloudinary\nfunction CloudinaryUploadWidget() {\n  const [title, setTitle] = useState(\"\");\n  const [URL, setURL] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [addVideo, { error }] = useMutation(ADD_VIDEO);\n  // Upload widget courtesy of cloudinary\n  const myWidget = window.cloudinary.createUploadWidget(\n    {\n      cloudName: \"dporcepgm\",\n      uploadPreset: \"tiktok_up\",\n    },\n    (error, result) => {\n      if (!error && result && result.event === \"success\") { // If video upload is a success, its logged in console\n        console.log(\"Done! Here is the video info: \", result.info);\n        // When upload is complete, cloudinary gives url for video\n        setURL(result.info.secure_url); // Set URL state for GraphQL database, adds url to database\n      }\n    }\n  );\n  // When upload button is clicked, myWidget is called to open\n  const uploadClick = () => {\n    myWidget.open();\n  };\n  // Submit form for title & video URL\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      addVideo({\n        variables: {\n          title: title, // title fromm input field\n          cloudURL: URL, // URL from cloudinary upload\n          videoAuthor: Auth.getProfile().data.name, // author from logged in user\n        },\n      });\n      setTitle(\"\"); // Input field goes back to blank on submit\n      window.location.assign('/'); // On submit, user is taken back to the home page\n    } catch (err) {\n      console.error(err); // If there is an error its logged in the console\n    }\n  };\n\n  return (\n    <Container className=\"upload-container justify-content-md-center\">\n      <Row className=\"justify-content-md-center upload-padding-top\">\n        <Form.Label>Upload Your Video</Form.Label>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <button\n          id=\"upload_widget\"\n          onClick={uploadClick}\n          className=\"cloudinary-button button6\"\n        >\n          Upload\n        </button>\n      </Row>\n      <Form>\n        <Row className=\"justify-content-md-center\">\n          <Col sm={5}>\n            <Form.Group as={Col} className=\"upload-label\" controlId=\"formGridEmail\">\n              <Form.Label  >Video Title</Form.Label>\n              <Form.Control\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                }}\n                value={title}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <button className='button6' type=\"submit\" onClick={handleFormSubmit}>\n            Submit\n          </button>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CloudinaryUploadWidget;","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport Home from \"./pages/Home\";\nimport VideoCrud from \"./pages/VideoCrud\"\nimport Video from \"./pages/Video\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport CloudinaryUploadWidget from \"./components/Upload\";\nimport Profile from \"./pages/Profile\"\n// Query and mutate models on localhost:3001/graphql\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"content-positioning\">\n          <Header />\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/upload\">\n            <CloudinaryUploadWidget />\n          </Route>\n          <Route exact path=\"/videos/:videoId\">\n            <Video />\n          </Route>\n          <Route exact path=\"/videosCrud/:videoId\">\n            <VideoCrud />\n          </Route>\n          <Route exact path=\"/me\">\n            <Profile />\n          </Route>\n        </div>\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}